---
mw_docker_enabled: true
mw_docker_compose_enabled: true
mw_docker_compose_version: "v2.2.3"
mw_docker_users:
  - "{{ ansible_user }}"

mw_podman_enabled: true

mw_proxy_enabled: false
mw_proxy_settings_http_proxy: 'http://myuser:mypassword@px01.example.com:3128'
mw_proxy_settings_https_proxy: 'http://px01.example.com:3128'
mw_proxy_settings_no_proxy: 'example.com,192.168.122.1'
mw_proxy_settings_ftp_proxy: 'http://proxy.example.com:8080'
mw_proxy_settings_yum_proxy: 'http://proxysrv:8080'
mw_proxy_settings_yum_proxy_username: 'myuser'
mw_proxy_settings_yum_proxy_password: 'mypassword'

mw_locales:
  - es_ES.UTF-8
  - es_AR.UTF-8
  - en_US.UTF-8

# System packages can be modified with vars/{{ ansible_distribution }}.yml

mw_workstation_local_install_directory: "{{ ansible_env.HOME }}/.mikroways/bin"
# if empty install every package, otherwise only install packages with name in
# list, for example:
#   mw_workstation_local_packages_only: [ kubectl, helm ]
# would install kubectl and helm only
mw_workstation_local_packages_only: []
mw_workstation_local_packages:
  -
    name: kubectl
    version: v1.21.0
    url: >-
      https://dl.k8s.io/release/%version%/bin/{{ ansible_system | lower}}/amd64/kubectl
    install_command: >-
      chmod +x %downloaded% &&
      mv %downloaded% %install_directory%/kubectl
    version_command: "kubectl version --client --short"
  -
    name: helm
    version: v3.7.2
    url: >-
      https://get.helm.sh/helm-%version%-{{ ansible_system | lower }}-amd64.tar.gz
    install_command: >-
     tar xfz %downloaded% -C /tmp &&
     mv /tmp/{{ ansible_system | lower }}-amd64/helm %install_directory%
    version_command: "helm version --short"
  -
    name: aws-cli
    version: 2.2.1
    url: https://awscli.amazonaws.com/awscli-exe-{{ ansible_system | lower }}-x86_64-%version%.zip
    install_command: >-
      unzip -o %downloaded% -d /tmp &&
      /tmp/aws/install -i ~/.aws-cli -b %install_directory%/ -u
    version_command: "aws --version"
  -
    name: aws-iam-authenticator
    url: >-
      https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/{{ansible_system | lower }}/amd64/aws-iam-authenticator
    version: 0.5.0
    install_command: >-
      mv %downloaded% %install_directory%/aws-iam-authenticator &&
      chmod +x %install_directory%/aws-iam-authenticator
    version_command: "aws-iam-authenticator version"
  -
    name: navi
    url: >- 
      https://github.com/denisidoro/navi/releases/download/v%version%/navi-v%version%-x86_64-unknown-{{ ansible_system | lower }}-musl.tar.gz
    version: 2.16.0
    install_command: "tar xfz %downloaded% -C %install_directory% navi"
    version_command: "navi -V"
  -
    name: yq
    url: >-
      https://github.com/mikefarah/yq/releases/download/v%version%/yq_{{ansible_system | lower}}_amd64
    version: 4.13.3
    install_command: >-
      mv %downloaded% %install_directory%/yq &&
      chmod +x %install_directory%/yq
    version_command: "yq --version"
  -
    name: eksctl 
    url: >-
      https://github.com/weaveworks/eksctl/releases/download/%version%/eksctl_{{ansible_system}}_amd64.tar.gz
    version: 0.47.0
    install_command: "tar xfz %downloaded% -C %install_directory%"
    version_command: "eksctl version"
  -
    name: govc
    url: >-
      https://github.com/vmware/govmomi/releases/download/v%version%/govc_{{ansible_system}}_x86_64.tar.gz
    version: 0.26.0
    install_command: "tar xfz %downloaded% -C %install_directory% govc"
    version_command: "govc version"
  -
    name: helmfile
    url: >-
      https://github.com/roboll/helmfile/releases/download/v%version%/helmfile_{{ansible_system | lower}}_amd64
    version: 0.139.9
    install_command: >-
      mv %downloaded% %install_directory%/helmfile &&
      chmod +x %install_directory%/helmfile
    version_command: "helmfile version"
  -
    name: kind
    url: >-
      https://github.com/kubernetes-sigs/kind/releases/download/v%version%/kind-{{ansible_system | lower}}-amd64
    version: 0.11.1
    install_command: >-
      mv %downloaded% %install_directory%/kind &&
      chmod +x %install_directory%/kind
    version_command: "kind version"
  -
    name: direnv
    url: >-
      https://github.com/direnv/direnv/releases/download/v%version%/direnv.{{ansible_system | lower}}-amd64
    version: 2.28.0
    install_command: >-
      mv %downloaded% %install_directory%/direnv &&
      chmod +x %install_directory%/direnv
    version_command: "direnv version"
  -
    name: kustomize
    url: >-
      https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv%version%/kustomize_v%version%_{{ansible_system | lower}}_amd64.tar.gz
    version: 4.2.0
    install_command: "tar xfz %downloaded% -C %install_directory%"
    version_command: "kustomize version"
  -
    name: restic
    url: >-
      https://github.com/restic/restic/releases/download/v%version%/restic_%version%_{{ansible_system | lower}}_amd64.bz2
    version: 0.12.0
    install_command: >-
      cat %downloaded% | bzip2 -d > %install_directory%/restic &&
      chmod +x %install_directory%/restic
    version_command: "restic version"
  -
    name: velero
    url: >-
      https://github.com/vmware-tanzu/velero/releases/download/v%version%/velero-v%version%-{{ ansible_system | lower }}-amd64.tar.gz
    version: 1.6.1
    install_command: >-
      tar fxz %downloaded% -C /tmp && mv /tmp/velero-*/velero %install_directory%
    version_command: "velero version --client-only"
  -
    name: terraform-switch
    url: >-
      https://github.com/warrensbox/terraform-switcher/releases/download/%version%/terraform-switcher_%version%_{{ansible_system | lower}}_amd64.tar.gz
    version: 0.12.1119
    install_command: "tar xfz %downloaded% -C %install_directory%"
    version_command: "tfswitch -v"
  -
    name: sops
    url: >-
      https://github.com/mozilla/sops/releases/download/v%version%/sops-v%version%.{{ ansible_system | lower}}
    version: 3.7.1
    install_command: >-
      mv %downloaded% %install_directory%/sops &&
      chmod +x %install_directory%/sops
    version_command: "sops -v"
  -
    name: age
    url: >-
      https://github.com/FiloSottile/age/releases/download/v%version%/age-v%version%-{{ ansible_system | lower}}-amd64.tar.gz
    version: 1.0.0
    install_command: >-
      tar fxz %downloaded% -C /tmp &&
      mv /tmp/age/age* %install_directory% &&
      chmod +x %install_directory%/age*
    version_command: "age --version"
  -
    name: krew
    url: >-
      https://github.com/kubernetes-sigs/krew/releases/download/v%version%/krew-{{ ansible_system | lower }}_amd64.tar.gz
    version: 0.4.3
    version_command: >-
      {{ ansible_env.HOME }}/.krew/bin/kubectl-krew version
    install_command: >-
      tar xfz  %downloaded% -C /tmp &&
      cd /tmp && ./krew-{{ ansible_system | lower }}_amd64 install krew &&
      ./krew-{{ ansible_system | lower }}_amd64 upgrade krew || true
  -
    name: clusterapi-0.3.22
    url: >-
      https://github.com/kubernetes-sigs/cluster-api/releases/download/v%version%/clusterctl-{{ ansible_system | lower}}-amd64
    version: 0.3.22
    install_command: >-
      mv %downloaded% %install_directory%/clusterctl-%version% &&
      chmod +x %install_directory%/clusterctl-%version%
    version_command: "clusterctl-%version% version -o short"
  -
    name: clusterapi
    url: >-
      https://github.com/kubernetes-sigs/cluster-api/releases/download/v%version%/clusterctl-{{ ansible_system | lower}}-amd64
    version: 1.1.3
    install_command: >-
      mv %downloaded% %install_directory%/clusterctl &&
      chmod +x %install_directory%/clusterctl
    version_command: "clusterctl version -o short"
  -
    name: packer
    url: >-
      https://releases.hashicorp.com/packer/%version%/packer_%version%_linux_amd64.zip
    version: 1.7.6
    install_command: >-
      unzip -o %downloaded% -d %install_directory%
    version_command: "packer version"
  -
    name: hugo
    url: >-
      https://github.com/gohugoio/hugo/releases/download/v%version%/hugo_extended_%version%_{{ ansible_system }}-64bit.tar.gz
    version: 0.85.0
    install_command: >-
      tar xfz %downloaded% -C %install_directory% hugo
    version_command: "hugo version"
  -
    name: tgswitch
    url: >-
      https://github.com/warrensbox/tgswitch/releases/download/%version%/tgswitch_%version%_{{ ansible_system | lower }}_amd64.tar.gz
    version: 0.5.382
    install_command: >-
      tar xfz %downloaded% -C %install_directory% tgswitch
    version_command: "tgswitch -v"
  -
    name: mc
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    version: RELEASE.2022-05
    install_command: >-
      chmod +x %downloaded% &&
      mv %downloaded% %install_directory%/mc
    version_command: "mc -v"
  -
    name: amtool
    url: >-
      https://github.com/prometheus/alertmanager/releases/download/v%version%/alertmanager-%version%.{{ ansible_system | lower }}-amd64.tar.gz
    version: 0.24.0
    install_command: >-
      tar xfz %downloaded% -C %install_directory% alertmanager-%version%.{{ ansible_system | lower }}-amd64/amtool --strip-components=1
    version_command: "amtool --version"
  -
    name: promtool
    url: >-
      https://github.com/prometheus/prometheus/releases/download/v%version%/prometheus-%version%.{{ ansible_system | lower }}-amd64.tar.gz
    version: 2.34.0
    install_command: >-
      tar xfz %downloaded% -C %install_directory% prometheus-%version%.{{ ansible_system | lower }}-amd64/promtool --strip-components=1
    version_command: "promtool --version"
  -
    name: tflint
    url: >-
      https://github.com/terraform-linters/tflint/releases/download/v%version%/tflint_{{ ansible_system | lower }}_amd64.zip
    version: 0.35.0
    install_command: >-
      unzip -o %downloaded% -d /tmp &&
      mv /tmp/tflint %install_directory%/tflint
    version_command: "tflint --version"
  -
    name: terraform-docs
    url: >-
      https://github.com/terraform-docs/terraform-docs/releases/download/v%version%/terraform-docs-v%version%-linux-amd64.tar.gz
    version: 0.16.0
    install_command: >-
      tar xfz %downloaded% -C %install_directory% terraform-docs
    version_command: "terraform-docs --version"
  -
    name: sonobuoy
    url: >-
      https://github.com/vmware-tanzu/sonobuoy/releases/download/v%version%/sonobuoy_%version%_{{ ansible_system | lower }}_amd64.tar.gz
    version: 0.56.3
    install_command: >-
      tar xfz %downloaded% -C %install_directory% sonobuoy
    version_command: "sonobuoy version --short"
